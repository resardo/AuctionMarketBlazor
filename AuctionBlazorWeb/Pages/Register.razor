@page "/register"
@using System.ComponentModel.DataAnnotations
@using AuctionBlazorWeb.Helpers
@using AuctionBlazorWeb.Models

@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

<div class="d-flex flex-column justify-content-center align-items-center pt-4">
<h3 class="pb-4 ">Register</h3>

<EditForm Model="@registerModel" OnValidSubmit="@HandleRegistration" class="w-50">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group pb-3">
        <label for="username">Username</label>
        <InputText id="username" class="form-control" @bind-Value="registerModel.Username" />
        <ValidationMessage For="@(() => registerModel.Username)" />
    </div>
    
     <div class="form-group pb-3">
        <label for="firstname">First Name</label>
        <InputText id="firstname" class="form-control" @bind-Value="registerModel.FirstName" />
        <ValidationMessage For="@(() => registerModel.FirstName)" />
    </div>
    
     <div class="form-group pb-3">
        <label for="lastname">Last Name</label>
        <InputText id="lastname" class="form-control" @bind-Value="registerModel.LastName" />
        <ValidationMessage For="@(() => registerModel.LastName)" />
    </div>
    
    <div class="form-group pb-3">
        <label for="password">Password</label>
        <InputText id="password" type="password" class="form-control" @bind-Value="registerModel.Password" />
        <ValidationMessage For="@(() => registerModel.Password)" />
    </div>

    <div class="d-flex flex-row justify-content-center w-100 pt-4">
    <button type="submit" class="btn btn-primary">Register</button>
    </div>
</EditForm>

</div>

@code {
    private RegisterModel registerModel = new RegisterModel();
    private string jwtToken;
    private string roleId;

    protected override async Task OnInitializedAsync()
    {


    }
    private async Task HandleRegistration()
    {
        registerModel.RoleId = new List<Guid>();
        var response = await Http.PostAsJsonAsync("/api/User/Register", registerModel);

        if (response.IsSuccessStatusCode)
        {
           NavigationManager.NavigateTo("/login");
        }
        else
        {
            var response1 = await response.Content.ReadFromJsonAsync<ErrorModel>();
            var alertMessage = $"{response1.Message}";
            await JSRuntime.InvokeVoidAsync("alert", alertMessage);
        }
    }
   

   
}
